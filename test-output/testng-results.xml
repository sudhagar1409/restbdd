<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="651" started-at="2024-01-10T18:03:43 IST" finished-at="2024-01-10T18:03:44 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@44c8afef]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="651" started-at="2024-01-10T18:03:43 IST" finished-at="2024-01-10T18:03:44 IST">
      <class name="runner.TestRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.TestRunner@44c8afef]" name="setUpClass" is-config="true" duration-ms="107" started-at="2024-01-10T18:03:43 IST" finished-at="2024-01-10T18:03:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunner@44c8afef]" name="runScenario" duration-ms="470" started-at="2024-01-10T18:03:43 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-10T18:03:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get incidents specific to the query parameters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get incidents"]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[Step [I am constructing a request with query paramter] is defined with 0 parameters at 'steps.GetRequestStepDefinition.requestCreation() in file:/C:/Users/sudha/eclipse-workspace/restassuredbdd/target/test-classes/'.
However, the gherkin step has 1 arguments:
 * Table:
      | sysparm_fields | category |
      | category       | software |

Step text: I am constructing a request with query paramter]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: Step [I am constructing a request with query paramter] is defined with 0 parameters at 'steps.GetRequestStepDefinition.requestCreation() in file:/C:/Users/sudha/eclipse-workspace/restassuredbdd/target/test-classes/'.
However, the gherkin step has 1 arguments:
 * Table:
      | sysparm_fields | category |
      | category       | software |

Step text: I am constructing a request with query paramter
at cucumber.runner.PickleStepDefinitionMatch.arityMismatch(PickleStepDefinitionMatch.java:84)
at cucumber.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:36)
at cucumber.runner.TestStep.executeStep(TestStep.java:65)
at cucumber.runner.TestStep.run(TestStep.java:50)
at cucumber.runner.PickleStepTestStep.run(PickleStepTestStep.java:43)
at cucumber.runner.TestCase.run(TestCase.java:46)
at cucumber.runner.Runner.runPickle(Runner.java:49)
at cucumber.api.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:57)
at cucumber.api.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.TestRunner@44c8afef]" name="tearDownClass" is-config="true" duration-ms="8" started-at="2024-01-10T18:03:44 IST" finished-at="2024-01-10T18:03:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
